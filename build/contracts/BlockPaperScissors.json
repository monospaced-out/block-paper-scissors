{
  "contractName": "BlockPaperScissors",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "opponent",
          "type": "address"
        },
        {
          "name": "choice",
          "type": "string"
        },
        {
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "createPlay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "player",
          "type": "address"
        },
        {
          "name": "opponent",
          "type": "address"
        },
        {
          "name": "gameId",
          "type": "string"
        }
      ],
      "name": "getChoice",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b6107a08061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063309bb0ea14610051578063b8162fde14610165575b600080fd5b341561005c57600080fd5b6100ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610224565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561012a57808201518184015260208101905061010f565b50505050905090810190601f1680156101575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017057600080fd5b610222600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610490565b005b61022c6106bb565b8273ffffffffffffffffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040518082805190602001908083835b6020831015156102b75780518252602082019150602081019050602083039250610292565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156103435760206040519081016040528060008152509050610489565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b6020831015156103b75780518252602082019150602081019050602083039250610392565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b505050505090505b9392505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816040518082805190602001908083835b60208310151561050457805182526020820191506020810190506020830392506104df565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160009054906101000a900460ff1615610552576106b6565b6060604051908101604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b6020831015156105fb57805182526020820191506020810190506020830392506105d6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106919291906106cf565b5060408201518160020160006101000a81548160ff0219169083151502179055509050505b505050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061071057805160ff191683800117855561073e565b8280016001018555821561073e579182015b8281111561073d578251825591602001919060010190610722565b5b50905061074b919061074f565b5090565b61077191905b8082111561076d576000816000905550600101610755565b5090565b905600a165627a7a72305820aa66842e53c1c4e2eefe3c8ec465d46915b2ccca09953bf607b1cba3bc84f8360029",
  "deployedBytecode": "0x60606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063309bb0ea14610051578063b8162fde14610165575b600080fd5b341561005c57600080fd5b6100ea600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610224565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561012a57808201518184015260208101905061010f565b50505050905090810190601f1680156101575780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017057600080fd5b610222600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610490565b005b61022c6106bb565b8273ffffffffffffffffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040518082805190602001908083835b6020831015156102b75780518252602082019150602081019050602083039250610292565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156103435760206040519081016040528060008152509050610489565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b6020831015156103b75780518252602082019150602081019050602083039250610392565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b505050505090505b9392505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020816040518082805190602001908083835b60208310151561050457805182526020820191506020810190506020830392506104df565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160009054906101000a900460ff1615610552576106b6565b6060604051908101604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826040518082805190602001908083835b6020831015156105fb57805182526020820191506020810190506020830392506105d6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106919291906106cf565b5060408201518160020160006101000a81548160ff0219169083151502179055509050505b505050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061071057805160ff191683800117855561073e565b8280016001018555821561073e579182015b8281111561073d578251825591602001919060010190610722565b5b50905061074b919061074f565b5090565b61077191905b8082111561076d576000816000905550600101610755565b5090565b905600a165627a7a72305820aa66842e53c1c4e2eefe3c8ec465d46915b2ccca09953bf607b1cba3bc84f8360029",
  "sourceMap": "25:612:0:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:612:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:210;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:210;514:6;;:::i;:::-;568:8;532:44;;:7;:15;540:6;532:15;;;;;;;;;;;;;;;548:6;532:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;;;;;;532:32:0;;;;;;;;;;;;:44;;;;528:59;;;578:9;;;;;;;;;;;;;;;;;528:59;600:7;:15;608:6;600:15;;;;;;;;;;;;;;;616:6;600:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;;;;;;600:30:0;;593:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:210;;;;;;:::o;199:222::-;284:7;:19;292:10;284:19;;;;;;;;;;;;;;;304:6;284:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;;;;;;284:33:0;;;;;;;;;;;;280:46;;;319:7;;280:46;361:55;;;;;;;;;377:8;361:55;;;;;;395:6;361:55;;;;410:4;361:55;;;;;331:7;:19;339:10;331:19;;;;;;;;;;;;;;;351:6;331:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:2;51:6;36:153;;;182:3;176:5;171:3;164:6;98:2;93:3;89;82:19;;123:2;118:3;114;107:19;;148:2;143:3;139;132:19;;36:153;;;274:1;267:3;263:2;259:3;254;250;246;315:4;311:3;305;299:5;295:3;356:4;350:3;344:5;340:3;389:7;380;377:2;372:3;365:6;3:399;;;;;;;;;;;;;;;;;;;;;;;;331:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;199:222;;;;:::o;25:612::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.2;\n\ncontract BlockPaperScissors {\n  struct Play {\n    address opponent;\n    string choice;\n    bool isSet;\n  }\n\n  mapping(address => mapping(string => Play)) private records;\n\n  function createPlay(address opponent, string choice, string gameId) public {\n    if (records[msg.sender][gameId].isSet) return;\n    records[msg.sender][gameId] = Play({opponent: opponent, choice: choice, isSet: true});\n  }\n\n  function getChoice(address player, address opponent, string gameId) public view returns (string) {\n    if (records[player][gameId].opponent != opponent) return \"\";\n    return records[player][gameId].choice;\n  }\n}\n",
  "sourcePath": "/Users/tyleryasaka/projects/block-paper-scissors/contracts/BlockPaperScissors.sol",
  "ast": {
    "attributes": {
      "absolutePath": "/Users/tyleryasaka/projects/block-paper-scissors/contracts/BlockPaperScissors.sol",
      "exportedSymbols": {
        "BlockPaperScissors": [
          77
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            77
          ],
          "name": "BlockPaperScissors",
          "scope": 78
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "BlockPaperScissors.Play",
              "name": "Play",
              "scope": 77,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "opponent",
                  "scope": 8,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2,
                    "name": "ElementaryTypeName",
                    "src": "75:7:0"
                  }
                ],
                "id": 3,
                "name": "VariableDeclaration",
                "src": "75:16:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "choice",
                  "scope": 8,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string storage pointer",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string storage pointer"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "97:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "97:13:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "isSet",
                  "scope": 8,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "116:4:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "116:10:0"
              }
            ],
            "id": 8,
            "name": "StructDefinition",
            "src": "57:74:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "records",
              "scope": 77,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "143:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(string memory => struct BlockPaperScissors.Play storage ref)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "162:6:0"
                      },
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Play",
                          "referencedDeclaration": 8,
                          "type": "struct BlockPaperScissors.Play storage pointer"
                        },
                        "id": 11,
                        "name": "UserDefinedTypeName",
                        "src": "172:4:0"
                      }
                    ],
                    "id": 12,
                    "name": "Mapping",
                    "src": "154:23:0"
                  }
                ],
                "id": 13,
                "name": "Mapping",
                "src": "135:43:0"
              }
            ],
            "id": 14,
            "name": "VariableDeclaration",
            "src": "135:59:0"
          },
          {
            "attributes": {
              "constant": false,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "createPlay",
              "payable": false,
              "scope": 77,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "opponent",
                      "scope": 46,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 15,
                        "name": "ElementaryTypeName",
                        "src": "219:7:0"
                      }
                    ],
                    "id": 16,
                    "name": "VariableDeclaration",
                    "src": "219:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "choice",
                      "scope": 46,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 17,
                        "name": "ElementaryTypeName",
                        "src": "237:6:0"
                      }
                    ],
                    "id": 18,
                    "name": "VariableDeclaration",
                    "src": "237:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "gameId",
                      "scope": 46,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 19,
                        "name": "ElementaryTypeName",
                        "src": "252:6:0"
                      }
                    ],
                    "id": 20,
                    "name": "VariableDeclaration",
                    "src": "252:13:0"
                  }
                ],
                "id": 21,
                "name": "ParameterList",
                "src": "218:48:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 22,
                "name": "ParameterList",
                "src": "274:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "isSet",
                          "referencedDeclaration": 7,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct BlockPaperScissors.Play storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(string memory => struct BlockPaperScissors.Play storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14,
                                      "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))",
                                      "value": "records"
                                    },
                                    "id": 23,
                                    "name": "Identifier",
                                    "src": "284:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 146,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 24,
                                        "name": "Identifier",
                                        "src": "292:3:0"
                                      }
                                    ],
                                    "id": 25,
                                    "name": "MemberAccess",
                                    "src": "292:10:0"
                                  }
                                ],
                                "id": 26,
                                "name": "IndexAccess",
                                "src": "284:19:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "string memory",
                                  "value": "gameId"
                                },
                                "id": 27,
                                "name": "Identifier",
                                "src": "304:6:0"
                              }
                            ],
                            "id": 28,
                            "name": "IndexAccess",
                            "src": "284:27:0"
                          }
                        ],
                        "id": 29,
                        "name": "MemberAccess",
                        "src": "284:33:0"
                      },
                      {
                        "attributes": {
                          "expression": null,
                          "functionReturnParameters": 22
                        },
                        "id": 30,
                        "name": "Return",
                        "src": "319:7:0"
                      }
                    ],
                    "id": 31,
                    "name": "IfStatement",
                    "src": "280:46:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct BlockPaperScissors.Play storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BlockPaperScissors.Play storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(string memory => struct BlockPaperScissors.Play storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14,
                                      "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))",
                                      "value": "records"
                                    },
                                    "id": 32,
                                    "name": "Identifier",
                                    "src": "331:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 146,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 33,
                                        "name": "Identifier",
                                        "src": "339:3:0"
                                      }
                                    ],
                                    "id": 34,
                                    "name": "MemberAccess",
                                    "src": "339:10:0"
                                  }
                                ],
                                "id": 36,
                                "name": "IndexAccess",
                                "src": "331:19:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 20,
                                  "type": "string memory",
                                  "value": "gameId"
                                },
                                "id": 35,
                                "name": "Identifier",
                                "src": "351:6:0"
                              }
                            ],
                            "id": 37,
                            "name": "IndexAccess",
                            "src": "331:27:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "opponent",
                                "choice",
                                "isSet"
                              ],
                              "type": "struct BlockPaperScissors.Play memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8,
                                  "type": "type(struct BlockPaperScissors.Play storage pointer)",
                                  "value": "Play"
                                },
                                "id": 38,
                                "name": "Identifier",
                                "src": "361:4:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "address",
                                  "value": "opponent"
                                },
                                "id": 39,
                                "name": "Identifier",
                                "src": "377:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 18,
                                  "type": "string memory",
                                  "value": "choice"
                                },
                                "id": 40,
                                "name": "Identifier",
                                "src": "395:6:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 41,
                                "name": "Literal",
                                "src": "410:4:0"
                              }
                            ],
                            "id": 42,
                            "name": "FunctionCall",
                            "src": "361:55:0"
                          }
                        ],
                        "id": 43,
                        "name": "Assignment",
                        "src": "331:85:0"
                      }
                    ],
                    "id": 44,
                    "name": "ExpressionStatement",
                    "src": "331:85:0"
                  }
                ],
                "id": 45,
                "name": "Block",
                "src": "274:147:0"
              }
            ],
            "id": 46,
            "name": "FunctionDefinition",
            "src": "199:222:0"
          },
          {
            "attributes": {
              "constant": true,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "getChoice",
              "payable": false,
              "scope": 77,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "player",
                      "scope": 76,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 47,
                        "name": "ElementaryTypeName",
                        "src": "444:7:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclaration",
                    "src": "444:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "opponent",
                      "scope": 76,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 49,
                        "name": "ElementaryTypeName",
                        "src": "460:7:0"
                      }
                    ],
                    "id": 50,
                    "name": "VariableDeclaration",
                    "src": "460:16:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "gameId",
                      "scope": 76,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 51,
                        "name": "ElementaryTypeName",
                        "src": "478:6:0"
                      }
                    ],
                    "id": 52,
                    "name": "VariableDeclaration",
                    "src": "478:13:0"
                  }
                ],
                "id": 53,
                "name": "ParameterList",
                "src": "443:49:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 76,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 54,
                        "name": "ElementaryTypeName",
                        "src": "514:6:0"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "514:6:0"
                  }
                ],
                "id": 56,
                "name": "ParameterList",
                "src": "513:8:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "opponent",
                              "referencedDeclaration": 3,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct BlockPaperScissors.Play storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(string memory => struct BlockPaperScissors.Play storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 14,
                                          "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))",
                                          "value": "records"
                                        },
                                        "id": 57,
                                        "name": "Identifier",
                                        "src": "532:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 48,
                                          "type": "address",
                                          "value": "player"
                                        },
                                        "id": 58,
                                        "name": "Identifier",
                                        "src": "540:6:0"
                                      }
                                    ],
                                    "id": 59,
                                    "name": "IndexAccess",
                                    "src": "532:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 52,
                                      "type": "string memory",
                                      "value": "gameId"
                                    },
                                    "id": 60,
                                    "name": "Identifier",
                                    "src": "548:6:0"
                                  }
                                ],
                                "id": 61,
                                "name": "IndexAccess",
                                "src": "532:23:0"
                              }
                            ],
                            "id": 62,
                            "name": "MemberAccess",
                            "src": "532:32:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50,
                              "type": "address",
                              "value": "opponent"
                            },
                            "id": 63,
                            "name": "Identifier",
                            "src": "568:8:0"
                          }
                        ],
                        "id": 64,
                        "name": "BinaryOperation",
                        "src": "532:44:0"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 56
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 65,
                            "name": "Literal",
                            "src": "585:2:0"
                          }
                        ],
                        "id": 66,
                        "name": "Return",
                        "src": "578:9:0"
                      }
                    ],
                    "id": 67,
                    "name": "IfStatement",
                    "src": "528:59:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 56
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "choice",
                          "referencedDeclaration": 5,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct BlockPaperScissors.Play storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(string memory => struct BlockPaperScissors.Play storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14,
                                      "type": "mapping(address => mapping(string memory => struct BlockPaperScissors.Play storage ref))",
                                      "value": "records"
                                    },
                                    "id": 68,
                                    "name": "Identifier",
                                    "src": "600:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 48,
                                      "type": "address",
                                      "value": "player"
                                    },
                                    "id": 69,
                                    "name": "Identifier",
                                    "src": "608:6:0"
                                  }
                                ],
                                "id": 70,
                                "name": "IndexAccess",
                                "src": "600:15:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 52,
                                  "type": "string memory",
                                  "value": "gameId"
                                },
                                "id": 71,
                                "name": "Identifier",
                                "src": "616:6:0"
                              }
                            ],
                            "id": 72,
                            "name": "IndexAccess",
                            "src": "600:23:0"
                          }
                        ],
                        "id": 73,
                        "name": "MemberAccess",
                        "src": "600:30:0"
                      }
                    ],
                    "id": 74,
                    "name": "Return",
                    "src": "593:37:0"
                  }
                ],
                "id": 75,
                "name": "Block",
                "src": "522:113:0"
              }
            ],
            "id": 76,
            "name": "FunctionDefinition",
            "src": "425:210:0"
          }
        ],
        "id": 77,
        "name": "ContractDefinition",
        "src": "25:612:0"
      }
    ],
    "id": 78,
    "name": "SourceUnit",
    "src": "0:638:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10"
    }
  },
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-02-16T13:08:08.804Z"
}